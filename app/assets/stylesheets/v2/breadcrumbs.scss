@import 'variables';

// Modern state flow breadcrumb design
ul#crumbs {
  list-style: none;
  display: inline-flex;
  align-items: center;
  padding: 0;
  margin: 0;
  background: $gray-50;
  border-radius: $border-radius-lg;
  padding: 4px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);

  // Override Bootstrap dropdown positioning inside crumbs
  li.crumb.dropdown {
    position: relative !important;
    
    .dropdown-menu {
      position: absolute !important;
      left: 0 !important;
      top: calc(100% + 4px) !important;
      margin-top: 0 !important;
      width: auto;
      min-width: 350px;
      max-width: 500px;
      border: 1px solid $gray-200;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
      border-radius: $border-radius-md;
      background: $white;
      z-index: 1000;
    
      li {
        border-bottom: 1px solid $gray-100;
        
        &:last-child {
          border-bottom: none;
        }
        
        a {
          display: block;
          padding: 12px 20px;
          color: $gray-700;
          font-size: 14px;
          text-decoration: none;
          transition: all 0.15s ease;
          
          &:hover {
            background: rgba($brand-light-blue, 0.1);
            color: $brand-deep-blue;
            padding-left: 24px;
          }
          
          strong {
            display: block;
            font-weight: $font-weight-medium;
            color: $gray-800;
            margin-bottom: 2px;
          }
          
          small {
            display: block;
            color: $gray-500;
            font-size: 12px;
            line-height: 1.4;
          }
        }
      }
    }
  }

  li.crumb {
    display: inline-block;
    position: relative;
    margin-right: 2px;
    
    // Ensure dropdown works properly
    &.dropdown {
      position: relative;
    }

    // Add state icons before each state name
    a.crumb-link {
      display: inline-flex;
      align-items: center;
      height: 36px;
      padding: 0 20px 0 16px;
      position: relative;
      font-size: 14px;
      font-weight: $font-weight-medium;
      text-decoration: none;
      color: $gray-600;
      background: $white;
      border: 1px solid $gray-200;
      transition: all 0.2s ease;
      cursor: pointer;
      white-space: nowrap;
      
      // Icons will be added via specific state selectors below
      
      // Hover state
      &:hover {
        background: $gray-50;
        color: $gray-800;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
        
        &::before {
          opacity: 1;
        }
      }
    }

    // Arrow connector between states
    &:not(:last-child) {
      margin-right: 24px;
      
      &::after {
        content: '\e080'; // Bootstrap glyphicon-chevron-right
        font-family: 'Glyphicons Halflings';
        position: absolute;
        right: -17px;
        top: 50%;
        transform: translateY(-50%);
        color: $gray-400;
        font-size: 10px;
        z-index: 2;
      }
    }

    // Active state styling
    a.crumb-active {
      background: $brand-medium-blue;
      color: $white;
      border: 1px solid $brand-medium-blue !important;
      box-shadow: 0 2px 4px rgba($brand-medium-blue, 0.2);
      position: relative;
      
      &::before {
        opacity: 1;
        filter: brightness(0) invert(1); // Make icon white
      }
      
      &:hover {
        background: darken($brand-medium-blue, 5%);
        border-color: darken($brand-medium-blue, 5%) !important;
        transform: translateY(-1px);
        box-shadow: 0 3px 6px rgba($brand-medium-blue, 0.3);
      }
      
      // Dropdown arrow for active state
      &.dropdown-toggle {
        &::after {
          display: inline-block;
          width: 0;
          height: 0;
          margin-left: 8px;
          vertical-align: middle;
          content: "";
          border-top: 4px solid;
          border-right: 4px solid transparent;
          border-left: 4px solid transparent;
        }
      }
    }

    // Inactive state styling
    a.crumb-inactive {
      background: $gray-100;
      color: $gray-500;
      border-color: $gray-200;
      cursor: not-allowed;
      
      &::before {
        opacity: 0.3;
      }
      
      &:hover {
        background: $gray-100;
        color: $gray-500;
        transform: none;
        box-shadow: none;
      }
    }

    // Isolated state (non-standard states)
    a.crumb-isolated {
      background: $warning;
      color: $white;
      border-color: $warning;
      
      &::before {
        display: none; // No icon for custom states
      }
      
      &:hover {
        background: darken($warning, 5%);
        border-color: darken($warning, 5%);
      }
      
      &.dropdown-toggle {
        &::after {
          display: inline-block;
          width: 0;
          height: 0;
          margin-left: 8px;
          vertical-align: middle;
          content: "";
          border-top: 4px solid;
          border-right: 4px solid transparent;
          border-left: 4px solid transparent;
        }
      }
    }
  }

  // First state - rounded left
  li.crumb:first-child {
    a.crumb-link {
      border-top-left-radius: $border-radius-md;
      border-bottom-left-radius: $border-radius-md;
      overflow: hidden; // Ensure clean corners
      
      // Fix for any border rendering issues
      &.crumb-active {
        outline: none;
        border: 1px solid $brand-medium-blue !important;
        
        &::after {
          display: none; // Remove any pseudo elements that might cause lines
        }
      }
    }
  }

  // Last state - rounded right
  li.crumb:last-child  {
    a.crumb-link {
      border-top-right-radius: $border-radius-md;
      border-bottom-right-radius: $border-radius-md;
      padding-right: 16px;
    }
  }
}

// State-specific icons using data attributes
#crumbs {
  a.crumb-link {
    &::before {
      display: inline-block;
      font-family: 'Glyphicons Halflings';
      font-style: normal;
      font-weight: normal;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      margin-right: 8px;
      font-size: 14px;
      vertical-align: middle;
      opacity: 0.7;
      transition: opacity 0.2s ease;
    }
    
    &:hover::before {
      opacity: 1;
    }
  }
  
  // Default icon
  a.crumb-link::before {
    content: '\e137'; // glyphicon-record as default
  }
  
  // Open state - folder-open for new/open leads  
  a[data-state="open"]::before {
    content: '\e118'; // glyphicon-folder-open
  }
  
  // Prospect state - user for qualified prospect
  a[data-state="prospect"]::before {
    content: '\e008'; // glyphicon-user
  }
  
  // Showing state - home for property viewing
  a[data-state="showing"]::before {
    content: '\e021'; // glyphicon-home
  }
  
  // Application state - pencil/edit for filling application
  a[data-state="application"]::before {
    content: '\e065'; // glyphicon-pencil
  }
  
  // Resident state - check/ok for completed/approved
  a[data-state="resident"]::before {
    content: '\e013'; // glyphicon-ok
  }
  
  // Active state icons should be white
  a.crumb-active::before {
    opacity: 1;
    color: inherit;
  }
}

// State toggle container improvements
.state_toggle {
  margin-bottom: $spacing-lg;
  
  .state_toggle-agent {
    margin-top: $spacing-md;
    font-size: 14px;
    color: $gray-600;
  }
}
